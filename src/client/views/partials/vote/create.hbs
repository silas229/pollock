<div class="mx-auto mb-6 max-w-7xl sm:px-6 lg:px-8">
  <div class="overflow-hidden bg-white shadow-sm dark:bg-gray-800 sm:rounded-lg">
    <div class="p-6 text-gray-900 dark:text-gray-100">
      <h2 class="pb-4 text-xl">Submit new Vote</h2>
      <form action="/vote/lack/{{ poll.token }}" x-data="voteForm()" x-init="initForm" method="post"
        @submit.prevent="submitForm">
        <input type="hidden" name="_method" value="put">
        {{#unless user}}
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300" for="name">
          Your Name
        </label>
        <input
          class="block w-full border-gray-300 rounded-md shadow-sm dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-primary-500 dark:focus:border-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600"
          type="text" x-model="formData.owner.name" id="name" name="name" required="required" autofocus="autofocus">
        <span class="error" for="name"></span>
        {{/unless}}

        <fieldset class="mt-4">
          <legend>Choices (You have {{poll.setting.voices}} {{pluralize poll.setting.voices "vote" "votes"}})</legend>
          {{#if poll.setting.worst}}
          <label class="block text-right">Worst</label>
          {{/if}}
          <ul class="block">
            <template x-for="(choice, index) in formData.choice" :key="index">
              <li class="p-2">
                <input type="checkbox" x-model="choice.value"
                  class="w-4 h-4 mr-2 border-gray-300 rounded text-primary-600 focus:ring-primary-600">
                <label x-text="choice.text">
                </label>
                {{#if ../poll.setting.worst}}
                <input type="radio" name="worst" x-model="choice.worst"
                  class="float-right w-4 h-4 border-gray-300 text-primary-600 focus:ring-primary-600">
                {{/if}}
              </li>
            </template>
          </ul>
        </fieldset>

        <button type="submit"
          class="inline-flex items-center px-4 py-2 text-xs font-semibold tracking-widest text-white uppercase transition duration-150 ease-in-out bg-gray-800 border border-transparent rounded-md dark:bg-gray-200 dark:text-gray-800 hover:bg-gray-700 dark:hover:bg-white focus:bg-gray-700 dark:focus:bg-white active:bg-gray-900 dark:active:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800">
          Submit
        </button>
      </form>
    </div>
  </div>
</div>

<script>
  function voteForm() {
    return {
      result: {
        edit: {
          value: "",
          link: "",
        },
      },
      formData: {
        owner: { name: "{{ user.name }}", },
        choice: []
      },
      poll_token: "{{ poll.token }}",
      async submitForm() {
        await fetch("/vote/lack/" + this.poll_token, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: JSON.stringify(this.formData),
        }).then(async (res) => {
          this.result = await res.json();
        });
      },
      async initForm() {
        await fetch("/poll/lack/" + this.poll_token,
          {
            headers: {
              "Content-Type": "application/json",
              "Accept": "application/json",
            },
          }).then(async (res) => {
            this.formData.choice = (await res.json()).poll.body.options;
            console.log(this.formData.options)
          });
      },
    };

  }
</script>